# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å –∏ —Ä–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö

'''
–ü–ª–∞–Ω —É—Ä–æ–∫–∞:
1) –í–≤–µ–¥–µ–Ω–∏–µ –∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ
2) –°–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å VS –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å
3) –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å –≤ Python –∏ FastAPI
4) –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π SQLAlchemy
5) –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ CRUD-–æ–ø–µ—Ä–∞—Ü–∏–∏
6) –ó–∞–∫–ª—é—á–µ–Ω–∏–µ

–í–æ–ø—Ä–æ—Å—ã –Ω–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞:
1) –î–ª—è —á–µ–≥–æ –Ω—É–∂–Ω—ã —Ñ–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å—Ö–µ–º—ã –ë–î?
–§–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π –æ–ø–∏—Å—ã–≤–∞—é—Ç –∫–∞–∫ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ö–µ–º—É –ë–î

2) –° –ø–æ–º–æ—â—å—é –∫–∞–∫–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –º–æ–∂–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ?
Alembic

3) –ö–∞–∫–æ–π —Ñ–∞–π–ª –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –º–∏–≥—Ä–∞—Ü–∏–π –≤ Alembic?
alembic.ini

4) –ö–∞–∫–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É –Ω–∞—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –≤ –ø—Ä–æ–µ–∫—Ç–µ product_catalog?
SQLite

5) –í —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ product_catalog –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ë–î –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏–ª–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ?
–°–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
'''

# -------------------------------------------------------------------------------------------------------------

# –°–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å VS –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å
'''
–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å –Ω–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –±—ã–ª –æ—Å–æ–±–µ–Ω–Ω—ã–º, —Å–µ–π—á–∞—Å –æ–±—Å—É–¥–∏–º –ø–æ—á–µ–º—É üòâ
–ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è. –ï—Å—Ç—å —Å–µ—Ä–≤–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
–û–¥–∏–Ω –∫–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è 2-3 —Å–µ–∫—É–Ω–¥—ã (–≤—ã–±–æ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ —Å–ª–æ–∂–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π).
–í —ç—Ç–æ –≤—Ä–µ–º—è –ø—Ä–∏—Ö–æ–¥—è—Ç –∑–∞–ø—Ä–æ—Å—ã –æ—Ç –¥—Ä—É–≥–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤. 
–ö–∞–∫ –±—É–¥–µ—Ç –≤–µ—Å—Ç–∏ API –≤ —Ç–µ–∫—É—â–µ–º –≤–∏–¥–µ?
- –ë—É–¥–µ—Ç –∂–¥–∞—Ç—å, –ø–æ–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –ø–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å
- –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã –±—É–¥—É—Ç –∂–¥–∞—Ç—å
- –°–µ—Ä–≤–µ—Ä –Ω–µ —Å–º–æ–∂–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ

–í —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å –±–ª–æ–∫–∏—Ä—É–µ—Ç –æ—Å—Ç–∞–ª—å–Ω—ã–µ. –≠—Ç–æ –∫–∞–∫ –µ—Å–ª–∏ –±—ã –≤ —Å—Ç–æ–ª–æ–≤–æ–π –æ–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫
–¥–æ–ª–≥–æ –≤—ã–±–∏—Ä–∞–ª –±–ª—é–¥–æ, –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ª—é–¥–∏ —Å—Ç–æ–ª–ø–∏–ª–∏—Å—å –≤ –æ—á–µ—Ä–µ–¥—å –æ–∂–∏–¥–∞–Ω–∏—è. –ß—Ç–æ–±—ã —ç—Ç–æ–≥–æ –∏–∑–±–µ–∂–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å.
–ú—ã —É–∂–µ —Å–ª–µ–≥–∫–∞ –≥–æ–≤–æ—Ä–∏–ª–∏ –ø—Ä–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –ø–æ–ø–æ–ª–Ω–∏—Ç—å –Ω–∞—à–∏ –∑–Ω–∞–Ω–∏—è –∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å
–∏—Ö –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.
'''

# -------------------------------------------------------------------------------------------------------------

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å –≤ Python –∏ FastAPI
'''
–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—Å–ø–æ–º–Ω–∏–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–º–µ–Ω—Ç –ø—Ä–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å –∫–∞–∫ —Ç–∞–∫–æ–≤—É—é.

–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–± –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–ø–µ—Ä–∞—Ü–∏–π –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ, –Ω–µ –±–ª–æ–∫–∏—Ä—É—è –ø—Ä–æ–≥—Ä–∞–º–º—É.
–í Python –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ –∫–æ—Ä—É—Ç–∏–Ω—ã –∏ —Ü–∏–∫–ª —Å–æ–±—ã—Ç–∏–π.

–ö–æ—Ä—É—Ç–∏–Ω–∞ - —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Å–≤–æ–µ
–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ –æ—Ç–¥–∞–≤–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ. –ö–æ–≥–¥–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≥–æ—Ç–æ–≤–∞, 
–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ—Ä—É—Ç–∏–Ω—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è —Å —Ç–æ–≥–æ –º–µ—Å—Ç–∞, –≥–¥–µ –æ–Ω–æ –±—ã–ª–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.

–¶–∏–∫–ª —Å–æ–±—ã—Ç–∏–π (event loop) - —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ–º–∏ –∫–æ—Ä—É—Ç–∏–Ω–∞–º–∏: –∑–∞–ø—É—Å–∫–∞–µ—Ç, —Å—Ç–∞–≤–∏—Ç –Ω–∞ –ø–∞—É–∑—É, –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ—Ç.

–ü—Ä–∏–º–µ—Ä –∏–∑ –∂–∏–∑–Ω–∏:
–°–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å - –≥–æ—Ç–æ–≤–∏–º –µ–¥—É –∏ –Ω–µ –º–æ–∂–µ–º –¥–µ–ª–∞—Ç—å –Ω–∏—á–µ–≥–æ –¥—Ä—É–≥–æ–≥–æ, –ø–æ–∫–∞ –≤–∞—Ä–∏—Ç—Å—è —Å—É–ø 
–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å - —Å—Ç–∞–≤–∏–º —Å—É–ø –≤–∞—Ä–∏—Ç—å—Å—è, –∞ –≤ —ç—Ç–æ –≤—Ä–µ–º—è –¥–µ–ª–∞–µ–º —É–±–æ—Ä–∫—É –Ω–∞ –∫—É—Ö–Ω–µ

–í–∞–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞:
async def - –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ (–∫–æ—Ä—É—Ç–∏–Ω—ã)
await - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
("–ø–æ–¥–æ–∂–¥–∞—Ç—å, –ø–æ–∫–∞ –∑–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è, –Ω–æ –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã")

–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–≤—É—Ö –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:
'''
# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ 1 - —Å–æ–∑–¥–∞—Ç—å –¥–≤–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –∏—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

# asyncio - –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å—é
import asyncio

# –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è "–ü—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å —Å—É–ø"
async def cook_soup():
    print('–ù–∞—á–∏–Ω–∞–µ–º –≥–æ—Ç–æ–≤–∏—Ç—å —Å—É–ø!')
    # –∏–º–∏—Ç–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∫–∏ —Å—É–ø–∞
    await asyncio.sleep(3)
    print('–°—É–ø –≥–æ—Ç–æ–≤!')

# –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è "–£–±—Ä–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ö–Ω–µ"
async def clean_kitchen():
    print('–ù–∞—á–∏–Ω–∞–µ–º —É–±–∏—Ä–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ö–Ω–µ!')
    # –∏–º–∏—Ç–∞—Ü–∏—è —É–±–æ—Ä–∫–∏
    await asyncio.sleep(2)
    print('–£–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')

async def main():
    # gather() - –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –∏ –æ–∂–∏–¥–∞—Ç—å –∏—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    await asyncio.gather(cook_soup(), clean_kitchen())

# –∑–∞–ø—É—Å–∫–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ—Ä—É—Ç–∏–Ω—ã –∏ –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
asyncio.run(main())

'''
–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –≤–º–µ—Å—Ç–æ 5 —Å–µ–∫—É–Ω–¥ (cook_soup() - 3, clean_kitchen() - 2) –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏–º–µ—Ä–Ω–æ –∑–∞ 3 —Å–µ–∫—É–Ω–¥—ã,
—Ç.–∫. –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω—è–ª–∏—Å—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞ —Å—á–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç–∏. –ú–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å—Å—è, —á—Ç–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è
"–ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ", –Ω–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ Python –±—ã—Å—Ç—Ä–æ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –º–µ–∂–¥—É –Ω–∏–º–∏ —Å –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π.

–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ FastAPI. –î–∞–Ω–Ω—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏.
–ï—Å–ª–∏ –º—ã —Å–æ–∑–¥–∞–¥–∏–º —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å async def, —Ç–æ –æ–Ω –Ω–µ –±—É–¥–µ—Ç –±–ª–æ–∫–∏—Ä—É—é—â–∏–º –∏ —Å–µ—Ä–≤–µ—Ä —Å–º–æ–∂–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –∑–∞–ø—Ä–æ—Å—ã.

–î–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏ —Ä–µ—à–∏–º —Å–ª–µ–¥—É—é—â—É—é –∑–∞–¥–∞—á—É. 
–°–æ–∑–¥–∞–¥–∏–º –¥–≤–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞:
1) sync_endpoint() - —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º–∏ –±–ª–æ–∫–∏—Ä—É—é—â–∏–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏
2) async_endpoint() - —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏

–í–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –±—É–¥–µ–º –∑–∞–º–µ—Ä—è—Ç—å –≤—Ä–µ–º—è –µ–≥–æ —Ä–∞–±–æ—Ç—ã –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.
–í –∫–∞—á–µ—Å—Ç–≤–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –±—É–¥–µ–º –≤—ã–∑—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥ sleep(), –ø—Ä–∏—á–µ–º –¥–ª—è sync_endpoint() —ç—Ç–æ –±—É–¥–µ—Ç –±–ª–æ–∫–∏—Ä—É—é—â–∞—è –≤–µ—Ä—Å–∏—è, 
–∞ –¥–ª—è async_endpoint() ‚Äì –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∞—è.
–í–æ–∑–≤—Ä–∞—â–∞—Ç—å –≤ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞—Ö –±—É–¥–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ (sync/async) –∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã.
'''
# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ 2 - —Å–æ–∑–¥–∞—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã, —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –∏—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

from fastapi import FastAPI
import time
import asyncio

app = FastAPI()

# —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å –±–ª–æ–∫–∏—Ä—É—é—â–∏–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏
@app.get('/sync')
def sync_endpoint():
    # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
    start = time.perf_counter()
    # –∑–∞–ø—É—Å–∫–∞–µ–º –±–ª–æ–∫–∏—Ä—É—é—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    for _ in range(20):
        time.sleep(1)
    # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∫–æ–Ω–µ—Ü –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä—É—é—â–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
    result = time.perf_counter() - start
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    return {'mode': 'sync', 'time': result}

# —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏
@app.get('/async')
async def async_endpoint():
    start = time.perf_counter()
    # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    await asyncio.gather(*[asyncio.sleep(1) for _ in range(20)])
    result = time.perf_counter() - start
    return {'mode': 'async', 'time': result}

'''
–ó–∞–ø—É—Å—Ç–∏–º –Ω–∞—à –∫–æ–¥ —á–µ—Ä–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∑–∞–ø—É—Å–∫:
uvicorn main:app --reload 

–°–Ω–∞—á–∞–ª–∞ –æ—Ç–∫—Ä–æ–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é:
http://127.0.0.1:8000/sync -> —É–≤–∏–¥–∏–º –ø—Ä–∏–º–µ—Ä–Ω–æ {"mode":"sync","time":20.005245400010608}
–û–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω—è–ª–∏—Å—å –¥—Ä—É–≥ –∑–∞ –¥—Ä—É–≥–æ–º, 20 –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ 1 —Å–µ–∫—É–Ω–¥–µ ‚âà 20 —Å–µ–∫—É–Ω–¥

–ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é:
http://127.0.0.1:8000/async -> —É–≤–∏–¥–∏–º –ø—Ä–∏–º–µ—Ä–Ω–æ {"mode":"async","time":1.0132027000654489}
–ó–¥–µ—Å—å –±–ª–æ–∫–∏—Ä—É—é—â–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–µ—Ç, –ø–æ—Å–ª–µ await –∫–æ—Ä—É—Ç–∏–Ω—ã –≤–∏—Å—è—Ç –≤ –æ–∂–∏–¥–∞–Ω–∏–∏. –¢–æ –µ—Å—Ç—å event loop
–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∫–æ—Ä—É—Ç–∏–Ω–∞–º–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ - –∑–¥–µ—Å—å –æ–Ω –ø—Ä–æ—Å—Ç–æ –∂–¥–µ—Ç —Å–∏–≥–Ω–∞–ª, —á—Ç–æ —Ç–∞–π–º–µ—Ä –∏—Å—Ç–µ–∫.
–ï—Å–ª–∏ –±—ã –≤–Ω—É—Ç—Ä–∏ –±—ã–ª–∞ –±–ª–æ–∫–∏—Ä—É—é—â–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è (time.sleep(), —Ç—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –±–µ–∑ await),
event loop –±—ã–ª –±—ã –∑–∞–Ω—è—Ç –∏ –æ—Å—Ç–∞–ª—å–Ω—ã–º –∫–æ—Ä—É—Ç–∏–Ω–∞–º –Ω–µ–≥–¥–µ –±—ã–ª–æ –±—ã "–∏–¥—Ç–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ" - –≤—Å–µ —Å—Ç–∞–ª–æ –±—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º.

–ü—Ä–∏–º–µ—Ä—ã, –≥–¥–µ –ø–æ–ª–µ–∑–Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å:
- –∑–∞–ø—Ä–æ—Å—ã –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö
- –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –≤–Ω–µ—à–Ω–∏–º API
- –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤

–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –ø–æ–¥–≤–æ–¥–Ω—ã–µ –∫–∞–º–Ω–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç–∏:
- –ù–µ–ª—å–∑—è –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ –≤—ã–∑–≤–∞—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π: –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å await –∏–ª–∏ asyncio.run()
- –í –æ–¥–Ω–æ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç–µ –Ω–µ —Å—Ç–æ–∏—Ç —Å–º–µ—à–∏–≤–∞—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
- –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å ‚â† —É—Å–∫–æ—Ä–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –û–Ω–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –ø—Ä–æ–ø—É—Å–∫–Ω—É—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞, 
–∞ –Ω–µ —Å–∫–æ—Ä–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–¥–∞.
'''

# -------------------------------------------------------------------------------------------------------------

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π SQLAlchemy
'''
–†–∞–Ω–µ–µ –º—ã –ø–æ–¥–∫–ª—é—á–∞–ª–∏ SQLAlchemy –∏ —Ä–∞–±–æ—Ç–∞–ª–∏ —á–µ—Ä–µ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –¥–≤–∏–∂–æ–∫. 
–ù–æ —É —Ç–∞–∫–æ–π —Å—Ö–µ–º—ã –µ—Å—Ç—å –º–∏–Ω—É—Å: –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–æ–ª–≥–∏–π, —Ç–æ –æ–Ω –±–ª–æ–∫–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–µ—Ä.
–î–∞–ª–µ–µ –º—ã –Ω–∞—É—á–∏–º—Å—è –ø–æ–¥–∫–ª—é—á–∞—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –¥–≤–∏–∂–æ–∫ –∏ —Å–µ—Å—Å–∏–∏ SQLAlchemy.
–î–µ–ª–∞—Ç—å –±—É–¥–µ–º —Å—Ä–∞–∑—É –Ω–∞ –Ω–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ product_catalog.

–°–û–í–ï–¢ –ü–†–ï–ü–û–î–ê–í–ê–¢–ï–õ–Æ: —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å–µ–π—á–∞—Å –µ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç product_catalog —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∑–∞–Ω—è—Ç–∏—è.

–ü–µ—Ä–µ–π–¥–µ–º –≤ —Ñ–∞–π–ª database.py –∏ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ —Ç–µ–∫—É—â—É—é, —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –∫–æ–¥–∞:
'''
# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ 3 - –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å database.py –ø–æ–¥ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –¥–≤–∏–∂–æ–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î 

from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker, declarative_base

engine = create_engine('sqlite:///products.db', echo=True)

Base = declarative_base()

SessionLocal = sessionmaker(bind=engine)

def get_db():
    db = SessionLocal()       
    try:
        yield db              
    finally:
        db.close() 

'''
–ò–∑–º–µ–Ω–∏–º –∫–æ–¥ –Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç.

1. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –¥–≤–∏–∂–æ–∫, —Å–µ—Å—Å–∏—è –∏ —Ñ–∞–±—Ä–∏–∫–∞ —Å–µ—Å—Å–∏–π
from sqlalchemy import create_engine
‚Üì
from sqlalchemy.ext.asyncio import create_async_engine, async_sessionmaker

create_async_engine() - —Å–æ–∑–¥–∞–µ—Ç –¥–≤–∏–∂–æ–∫ –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î.
–¢–µ–ø–µ—Ä—å –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤–≤–æ–¥–∞/–≤—ã–≤–æ–¥–∞ —Å –ë–î –Ω–µ –±—É–¥—É—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ä–≤–µ—Ä.
async_sessionmaker - –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –∫–ª–∞—Å—Å–∞ sessionmaker –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ —Å–µ—Å—Å–∏–π.

2. –°–æ–∑–¥–∞–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –¥–≤–∏–∂–∫–∞
engine = create_engine('sqlite:///products.db', echo=True)
‚Üì
engine = create_async_engine('sqlite+aiosqlite:///products.db', echo=True)

aiosqlite - –¥—Ä–∞–π–≤–µ—Ä, –¥–ª—è SQLite —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π asyncio, —É–∫–∞–∑—ã–≤–∞–µ–º –≤ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
–∫ –¥–∏–∞–ª–µ–∫—Ç—É sqlite.

–í–ê–ñ–ù–û: –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å aiosqlite –Ω–∞–º –Ω—É–∂–Ω–æ –µ–≥–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ pip:
pip install aiosqlite

3. –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–±—Ä–∏–∫–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π
SessionLocal = sessionmaker(bind=engine)
‚Üì
AsyncSessionLocal = async_sessionmaker(bind=engine, expire_on_commit=False)

expire_on_commit=False - —á—Ç–æ–±—ã –æ–±—ä–µ–∫—Ç—ã –ø–æ—Å–ª–µ commit –Ω–µ "–æ–±–Ω—É–ª—è–ª–∏—Å—å" –∏ –æ—Å—Ç–∞–≤–∞–ª–∏—Å—å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏

4. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å FastAPI
def get_db():
    db = SessionLocal()       
    try:
        yield db              
    finally:
        db.close()
‚Üì
async def get_session():
    async with AsyncSessionLocal() as session:
        yield session

–¢–µ–ø–µ—Ä—å —ç—Ç–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å, —Ç.–∫. –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é.
–ü–æ–º–µ–Ω—è–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ get_session(), —á—Ç–æ –±–æ–ª—å—à–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ —Å–º—ã—Å–ª—É –∏ –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç –ø—É—Ç–∞–Ω–∏—Ü—ã.
–ò—Å–ø–æ–ª—å–∑—É–µ–º async with, —á—Ç–æ–±—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞.

–ò—Ç–æ–≥–æ–≤—ã–π –∫–æ–¥ –≤ database.py:
''' 
from sqlalchemy.ext.asyncio import create_async_engine, async_sessionmaker
from sqlalchemy.orm import declarative_base

engine = create_async_engine('sqlite+aiosqlite:///products.db', echo=True)

Base = declarative_base()

AsyncSessionLocal = async_sessionmaker(bind=engine, expire_on_commit=False)

async def get_session():
    async with AsyncSessionLocal() as session:
        yield session

# -------------------------------------------------------------------------------------------------------------

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ CRUD-–æ–ø–µ—Ä–∞—Ü–∏–∏

# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ 4 - –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å routers/products.py –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –ë–î

'''
–ü–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –¥–≤–∏–∂–æ–∫ –ë–î, –Ω–∞–º –Ω—É–∂–Ω–æ –≤–Ω–µ—Å—Ç–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–ª–æ–∏ routers –∏ repositories.

–ù–∞—á–Ω–µ–º —Å —Ñ–∞–π–ª–∞ routers/products.py:

1. –í–º–µ—Å—Ç–æ Session –ø–æ–¥–∫–ª—é—á–∏–º AsyncSession
from sqlalchemy.orm import Session 
‚Üì
from sqlalchemy.ext.asyncio import AsyncSession

–û–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤:
- def ‚Üí async def
- –ê—Ä–≥—É–º–µ–Ω—Ç db: Session ‚Üí session: AsyncSession
- –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ë–î —á–µ—Ä–µ–∑ await

–°–û–í–ï–¢ –ü–†–ï–ü–û–î–ê–í–ê–¢–ï–õ–Æ: –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –ø–æ–¥ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–º–µ—Å—Ç–µ —Å–æ —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏.

–ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª routers/products.py –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫:
'''
from fastapi import APIRouter, HTTPException, Query, Depends
# –ø–æ–¥–∫–ª—é—á–∞–µ–º –∫–ª–∞—Å—Å AsyncSession –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–µ–π
from sqlalchemy.ext.asyncio import AsyncSession

from database import get_session
from models import Product
from schemas import ProductCreate, ProductOut, ProductUpdate
from repositories import products_repository

router = APIRouter(
    prefix='/products',
    tags=['Products']
)

# –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–∞
async def get_product_or_404(session: AsyncSession, product_id: int) -> Product:
    product = await products_repository.get_product(session, product_id)
    if not product:
        raise HTTPException(status_code=404, detail='–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω')
    return product

# —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
@router.post('', response_model=ProductOut)
async def create_product(product_data: ProductCreate, session: AsyncSession = Depends(get_session)):
    return await products_repository.create_product(session, product_data)

# –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
@router.get('', response_model=list[ProductOut])
async def get_products_list(
    q: str | None = Query(default=None, description='–ü–æ–∏—Å–∫ –ø–æ –ø–æ–¥—Å—Ç—Ä–æ–∫–µ'),
    in_stock: bool | None = Query(default=None, description='–§–∏–ª—å—Ç—Ä –ø–æ –Ω–∞–ª–∏—á–∏—é'),
    min_price: float | None = Query(default=None, ge=0, description='–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞'),
    max_price: float | None = Query(default=None, ge=0, description='–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞'),
    session: AsyncSession = Depends(get_session)
):
    return await products_repository.get_products_list(session, q, in_stock, min_price, max_price)

# –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –ø–æ ID
@router.get('/{product_id}', response_model=ProductOut)
async def get_product(product_id: int, session: AsyncSession = Depends(get_session)):
    return await get_product_or_404(session, product_id)

# –ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
@router.put('/{product_id}', response_model=ProductOut)
async def put_product(product_id: int, product_data: ProductCreate, session: AsyncSession = Depends(get_session)):
    # –ø—Ä–∏ –≤—ã–∑–æ–≤–µ get_product_or_404() —Ç–æ–∂–µ —Å—Ç–∞–≤–∏–º await, –∏–Ω–∞—á–µ –≤ product –ø–æ–ø–∞–¥–µ—Ç –∫–æ—Ä—É—Ç–∏–Ω–∞, –∞ –Ω–µ –æ–±—ä–µ–∫—Ç Product
    product = await get_product_or_404(session, product_id)
    return await products_repository.put_product(session, product, product_data)

# —á–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
@router.patch('/{product_id}', response_model=ProductOut)
async def patch_product(product_id: int, product_data: ProductUpdate, session: AsyncSession = Depends(get_session)):
    product = await get_product_or_404(session, product_id)
    return await products_repository.patch_product(session, product, product_data)

# —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
@router.delete('/{product_id}')
async def delete_product(product_id: int, session: AsyncSession = Depends(get_session)):
    product = await get_product_or_404(session, product_id)
    await products_repository.delete_product(session, product)
    return {'message': '–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω'}

# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ 5 - –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å repositories/products_repository.py –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –ë–î

'''
–û—Å—Ç–∞–ª–æ—Å—å –≤–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ repositories/products_repository.py:
- def ‚Üí async def 
- –°–µ—Å—Å–∏—è: 
- - Session ‚Üí AsyncSession
- - db: Session ‚Üí session: AsyncSession
- –ó–∞–ø—Ä–æ—Å—ã –∫ –ë–î: db.query(Product)... ‚Üí  await db.execute(select(Product)...)
- –ú–µ—Ç–æ–¥—ã —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏:
- - first() ‚Üí scalar_one_or_none()
- - all() ‚Üí scalars().all()
- –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –ë–î commit() –∏ delete() —Ç–µ–ø–µ—Ä—å —Å await, —Ç.–∫. –æ–Ω–∏ —è–≤–ª—è—é—Ç—Å—è –∫–æ—Ä—É—Ç–∏–Ω–∞–º–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ AsyncSession

–°–û–í–ï–¢ –ü–†–ï–ü–û–î–ê–í–ê–¢–ï–õ–Æ: –Ω–µ —Å—Ç–æ–∏—Ç —Å—Ä–∞–∑—É –≥–æ–≤–æ—Ä–∏—Ç—å –æ–±–æ –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö, –æ—Å–æ–±–µ–Ω–Ω–æ –ø—Ä–æ –∑–∞–ø—Ä–æ—Å—ã –∫ –ë–î –∏ –º–µ—Ç–æ–¥—ã —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.
–õ—É—á—à–µ –ø–æ–∫–∞–∑–∞—Ç—å –∏—Ö –ø—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∫–æ–¥–∞, —Ç–∞–∫ –±—É–¥–µ—Ç –±–æ–ª–µ–µ –Ω–∞–≥–ª—è–¥–Ω–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ.

–ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª repositories/products_repository.py –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫:
'''
# –ø–æ–¥–∫–ª—é—á–∞–µ–º –∫–ª–∞—Å—Å AsyncSession –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–µ–π
from sqlalchemy.ext.asyncio import AsyncSession
# select() - —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö, —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏—è—Ö, –∑–∞–º–µ–Ω–∞ query()
from sqlalchemy import select
from models import Product
from schemas import ProductCreate, ProductUpdate

# —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä
async def create_product(session: AsyncSession, product_data: ProductCreate) -> Product:
    new_product = Product(**product_data.model_dump())
    session.add(new_product)
    await session.commit()
    return new_product

# –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
async def get_products_list(
    session: AsyncSession,
    q: str = None,
    in_stock: bool = None,
    min_price: float = None,
    max_price: float = None
) -> list[Product]:

    # –º–µ–Ω—è–µ–º query() –Ω–∞ select(), result –Ω–∞ query –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞ –∏ –ª–æ–≥–∏–∫–∏
    query = select(Product)

    # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –Ω–∞–ª–∏—á–∏—è, –º–∞–∫—Å. –∏ –º–∏–Ω. —Ü–µ–Ω—ã
    if in_stock is not None:
        # –∑–¥–µ—Å—å –∏ –¥–∞–ª–µ–µ - –º–µ–Ω—è–µ–º filter() –Ω–∞ where()
        query = query.where(Product.in_stock == in_stock)
    if min_price is not None:
        query = query.where(Product.price >= min_price)
    if max_price is not None:
        query = query.where(Product.price <= max_price)
    
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ –ë–î –∏ –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Result
    result = await session.execute(query)
    # –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç Result –≤ —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ Product
    products = result.scalars().all()
    
    if q:
        low_q = q.lower()
        products = [p for p in products if low_q in p.name.lower()]
    
    return products

# –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –ø–æ ID
async def get_product(session: AsyncSession, product_id: int) -> Product | None:
    result = await session.execute(select(Product).where(Product.id == product_id))
    return result.scalar_one_or_none()

# –ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
async def put_product(session: AsyncSession, product: Product, product_data: ProductCreate) -> Product:
    for field, value in product_data.model_dump().items():
        setattr(product, field, value)
    await session.commit()
    return product

# —á–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
async def patch_product(session: AsyncSession, product: Product, product_data: ProductUpdate) -> Product:
    updates = product_data.model_dump(exclude_unset=True)
    for field, value in updates.items():
        setattr(product, field, value)
    await session.commit()
    return product

# —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
async def delete_product(session: AsyncSession, product: Product) -> None:
    await session.delete(product)
    await session.commit()

'''
–ï—Å–ª–∏ –º—ã —Å–µ–π—á–∞—Å –ø–æ–ø—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ uvicorn main:app --reload,
—Ç–æ —É–≤–∏–¥–∏–º –æ—à–∏–±–∫—É AttributeError: 'AsyncEngine' object has no attribute '_run_ddl_visitor'.
–í—Å–µ –¥–µ–ª–æ –≤ —Å—Ç—Ä–æ—á–∫–µ Base.metadata.create_all(bind=engine) –≤ main.py - –∑–¥–µ—Å—å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω—ã–π –≤—ã–∑–æ–≤ 
–Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º –¥–≤–∏–∂–∫–µ. –ú—ã –º–æ–∂–µ–º –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å —ç—Ç—É —Å—Ç—Ä–æ—á–∫—É, –Ω–æ –µ—Å—Ç—å —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ—â–µ - –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—É—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é.
–î–µ–ª–æ –≤ —Ç–æ–º, —á—Ç–æ –º—ã —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∑–∞–Ω—è—Ç–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º Alembic, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤—Å—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ë–î.
–ü—Ä–∏ —ç—Ç–æ–º, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –¥–≤–∏–∂–æ–∫, –≤ Alembic –º—ã –≤—Å–µ —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é sqlite:///./products.db,
—Ç–∞–∫ –∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å. –ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç—Ä–æ—á–∫–∏ Base.metadata.create_all(bind=engine) –º—ã –º–æ–∂–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.

–°–û–í–ï–¢ –ü–†–ï–ü–û–î–ê–í–ê–¢–ï–õ–Æ: –µ—Å–ª–∏ —É –≤–∞—Å —Ç–∞–∫–∂–µ –ø–æ—è–≤–∏–ª–æ—Å—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –Ω–∞—Å—á–µ—Ç orm_mode = True –≤ s—Åhemas.py, —Ç–æ –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å
—Å—Ç—É–¥–µ–Ω—Ç–∞–º, —á—Ç–æ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ Pydantic –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é:
class Config:    
    orm_mode = True 

—Å—Ç–æ–∏—Ç –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞:
from pydantic import ConfigDict

class ProductOut(ProductCreate):
...
    model_config = ConfigDict(from_attributes=True)

–ï—Å–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å, —Ç–æ –≤—Å–µ —Ä–∞–≤–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å —ç—Ç–æ—Ç –∫–æ–¥ –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Å—Ç–∏–ª—é Pydantic v2.
'''